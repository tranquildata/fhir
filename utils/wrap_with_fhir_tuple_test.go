/*
 * Copyright (c) 2020, Tranquil Data, Inc. All rights reserved.
 */

package utils

import (
	"bytes"
	"encoding/json"
	"fmt"
	"strings"
	"testing"

	"k8s.io/client-go/util/jsonpath" //kubernetes client
	//"github.com/kubernetes/client-go/util/jsonpath"
)

func TestThatStructsCanBeParsed(t *testing.T) {
	st, err := ParseFhirModel("../models/activitydefinition.go")
	if err != nil {
		t.Error(err)
	}
	if st == nil {
		t.Errorf("Struct was nil")
	}
	emitted, err := EmitTupleCode(st, "models")
	if err != nil {
		t.Error(err)
	}
	if len(emitted) == 0 {
		t.Errorf("emitted was empty")
	}
}

func TestJsonPath(t *testing.T) {
	jsonPth := jsonpath.New("td testing")
	jsonPth.EnableJSONOutput(true)
	jsonPth.Parse("{.entry[?(@.resource.resourceType == \"ExplanationOfBenefit\")].resource.careTeam[0].provider}")
	buf := new(bytes.Buffer)
	var bort interface{}
	err := json.Unmarshal([]byte(testbundle), &bort)
	if err != nil {
		t.Error(err)
	}
	err = jsonPth.Execute(buf, bort)
	if err != nil {
		t.Error(err)
	}
	out := buf.String()
	fmt.Println(out)
}

func TestTruncate(t *testing.T) {
	out, err := testTruncate("entry")
	if err != nil {
		t.Error(err)
	}
	fmt.Println("testtruncate:" + out)
	out, err = testTruncate("{.entry[?(@.resource.resourceType == \"ExplanationOfBenefit\")].resource.careTeam[0].provider}")
	if err != nil {
		t.Error(err)
	}
	fmt.Println(out)
}

func testTruncate(fieldToKeep string) (string, error) {
	if len(fieldToKeep) < 1 {
		return "", fmt.Errorf("No field specified")
	}
	jsonPathString := ""
	switch {
	case strings.HasPrefix(fieldToKeep, "."),
		strings.HasPrefix(fieldToKeep, "$"),
		strings.HasPrefix(fieldToKeep, "{"):
		jsonPathString = fieldToKeep
	default:
		jsonPathString = "{." + fieldToKeep + "}"
	}
	fmt.Println("jsonPathString: " + jsonPathString)
	jsonPth := jsonpath.New("td testing")
	jsonPth.EnableJSONOutput(true)
	if err := jsonPth.Parse(jsonPathString); err != nil {
		return "", err
	}
	buf := new(bytes.Buffer)
	var bort interface{}
	err := json.Unmarshal([]byte(testbundle), &bort)
	if err != nil {
		return "", err
	}
	err = jsonPth.Execute(buf, bort)
	if err != nil {
		return "", err
	}
	out := buf.String()
	return out, nil
}

/*
func TestThatProcessDirWorks(t *testing.T) {
	processed, err := ProcessDirectory("../models", "models")
	if err != nil {
		t.Error(err)
	}
	if len(processed) < 100 {
		t.Errorf("Incorrect number of processed files: %d", len(processed))
	}
	fmt.Printf("processed: %v\n", processed)
}
*/

const testbundle = `
 {
	 "resourceType": "Bundle",
	 "type": "transaction",
	 "entry": [
		 {
			 "fullUrl": "urn:uuid:018f428e-34f6-4707-8009-5ad742f901e7",
			 "resource": {
				 "resourceType": "Patient",
				 "id": "018f428e-34f6-4707-8009-5ad742f901e7",
				 "text": {
					 "status": "generated",
					 "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\">Generated by <a href=\"https://github.com/synthetichealth/synthea\">Synthea</a>.Version identifier: v2.4.0-100-g26a4b936\n .   Person seed: 8766734163625651911  Population seed: 1559319163074</div>"
				 },
				 "extension": [
					 {
						 "url": "http://hl7.org/fhir/us/core/StructureDefinition/us-core-race",
						 "extension": [
							 {
								 "url": "ombCategory",
								 "valueCoding": {
									 "system": "urn:oid:2.16.840.1.113883.6.238",
									 "code": "2106-3",
									 "display": "White"
								 }
							 },
							 {
								 "url": "text",
								 "valueString": "White"
							 }
						 ]
					 },
					 {
						 "url": "http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity",
						 "extension": [
							 {
								 "url": "ombCategory",
								 "valueCoding": {
									 "system": "urn:oid:2.16.840.1.113883.6.238",
									 "code": "2186-5",
									 "display": "Not Hispanic or Latino"
								 }
							 },
							 {
								 "url": "text",
								 "valueString": "Not Hispanic or Latino"
							 }
						 ]
					 },
					 {
						 "url": "http://hl7.org/fhir/StructureDefinition/patient-mothersMaidenName",
						 "valueString": "Aiko Jacobs"
					 },
					 {
						 "url": "http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex",
						 "valueCode": "M"
					 },
					 {
						 "url": "http://hl7.org/fhir/StructureDefinition/patient-birthPlace",
						 "valueAddress": {
							 "city": "Holyoke",
							 "state": "Massachusetts",
							 "country": "US"
						 }
					 },
					 {
						 "url": "http://synthetichealth.github.io/synthea/disability-adjusted-life-years",
						 "valueDecimal": 0.3202898736241102
					 },
					 {
						 "url": "http://synthetichealth.github.io/synthea/quality-adjusted-life-years",
						 "valueDecimal": 63.67971012637589
					 }
				 ],
				 "identifier": [
					 {
						 "system": "https://github.com/synthetichealth/synthea",
						 "value": "e925b0f3-8006-43f6-aa31-94bd215e55e7"
					 },
					 {
						 "type": {
							 "coding": [
								 {
									 "system": "http://terminology.hl7.org/CodeSystem/v2-0203",
									 "code": "MR",
									 "display": "Medical Record Number"
								 }
							 ],
							 "text": "Medical Record Number"
						 },
						 "system": "http://hospital.smarthealthit.org",
						 "value": "e925b0f3-8006-43f6-aa31-94bd215e55e7"
					 },
					 {
						 "type": {
							 "coding": [
								 {
									 "system": "http://terminology.hl7.org/CodeSystem/v2-0203",
									 "code": "SS",
									 "display": "Social Security Number"
								 }
							 ],
							 "text": "Social Security Number"
						 },
						 "system": "http://hl7.org/fhir/sid/us-ssn",
						 "value": "999-22-1962"
					 },
					 {
						 "type": {
							 "coding": [
								 {
									 "system": "http://terminology.hl7.org/CodeSystem/v2-0203",
									 "code": "DL",
									 "display": "Driver's License"
								 }
							 ],
							 "text": "Driver's License"
						 },
						 "system": "urn:oid:2.16.840.1.113883.4.3.25",
						 "value": "S99942380"
					 },
					 {
						 "type": {
							 "coding": [
								 {
									 "system": "http://terminology.hl7.org/CodeSystem/v2-0203",
									 "code": "PPN",
									 "display": "Passport Number"
								 }
							 ],
							 "text": "Passport Number"
						 },
						 "system": "http://standardhealthrecord.org/fhir/StructureDefinition/passportNumber",
						 "value": "X45815551X"
					 }
				 ],
				 "name": [
					 {
						 "use": "official",
						 "family": "Koepp",
						 "given": [
							 "Abdul"
						 ],
						 "prefix": [
							 "Mr."
						 ]
					 }
				 ],
				 "telecom": [
					 {
						 "system": "phone",
						 "value": "555-978-4581",
						 "use": "home"
					 }
				 ],
				 "gender": "male",
				 "birthDate": "1954-10-02",
				 "address": [
					 {
						 "extension": [
							 {
								 "url": "http://hl7.org/fhir/StructureDefinition/geolocation",
								 "extension": [
									 {
										 "url": "latitude",
										 "valueDecimal": 42.534202
									 },
									 {
										 "url": "longitude",
										 "valueDecimal": -70.969734
									 }
								 ]
							 }
						 ],
						 "line": [
							 "313 Lockman Row Suite 4"
						 ],
						 "city": "Peabody",
						 "state": "Massachusetts",
						 "postalCode": "01940",
						 "country": "US"
					 }
				 ],
				 "maritalStatus": {
					 "coding": [
						 {
							 "system": "http://terminology.hl7.org/CodeSystem/v3-MaritalStatus",
							 "code": "M",
							 "display": "M"
						 }
					 ],
					 "text": "M"
				 },
				 "multipleBirthBoolean": false,
				 "communication": [
					 {
						 "language": {
							 "coding": [
								 {
									 "system": "urn:ietf:bcp:47",
									 "code": "en-US",
									 "display": "English"
								 }
							 ],
							 "text": "English"
						 }
					 }
				 ],
				 "meta": {
					 "tag": [
						 {
							 "system": "https://smarthealthit.org/tags",
							 "code": "synthea-5-2019"
						 }
					 ]
				 }
			 },
			 "request": {
				 "method": "POST",
				 "url": "Patient"
			 }
		 },
 {
	 "fullUrl": "urn:uuid:f6f0fdfd-6c1e-4362-ac4f-bb47137304cb",
	 "resource": {
		 "resourceType": "ExplanationOfBenefit",
		 "id": "f6f0fdfd-6c1e-4362-ac4f-bb47137304cb",
		 "contained": [
			 {
				 "resourceType": "ServiceRequest",
				 "id": "referral",
				 "status": "completed",
				 "intent": "order",
				 "subject": {
					 "reference": "urn:uuid:018f428e-34f6-4707-8009-5ad742f901e7"
				 },
				 "requester": {
					 "reference": "urn:uuid:6d705d81-8546-43b2-b336-31a282128f2d"
				 },
				 "performer": [
					 {
						 "reference": "urn:uuid:6d705d81-8546-43b2-b336-31a282128f2d"
					 }
				 ]
			 },
			 {
				 "resourceType": "Coverage",
				 "id": "coverage",
				 "status": "active",
				 "type": {
					 "text": "private"
				 },
				 "beneficiary": {
					 "reference": "urn:uuid:018f428e-34f6-4707-8009-5ad742f901e7"
				 },
				 "payor": [
					 {
						 "display": "private"
					 }
				 ]
			 }
		 ],
		 "identifier": [
			 {
				 "system": "https://bluebutton.cms.gov/resources/variables/clm_id",
				 "value": "a37ffc2e-7d4f-4e91-8bd9-1f22e96418bf"
			 },
			 {
				 "system": "https://bluebutton.cms.gov/resources/identifier/claim-group",
				 "value": "99999999999"
			 }
		 ],
		 "status": "active",
		 "type": {
			 "coding": [
				 {
					 "system": "http://terminology.hl7.org/CodeSystem/claim-type",
					 "code": "institutional"
				 }
			 ]
		 },
		 "use": "claim",
		 "patient": {
			 "reference": "urn:uuid:018f428e-34f6-4707-8009-5ad742f901e7"
		 },
		 "billablePeriod": {
			 "start": "1989-08-05T19:52:54-04:00",
			 "end": "1990-08-05T19:52:54-04:00"
		 },
		 "created": "1989-08-05T19:52:54-04:00",
		 "insurer": {
			 "display": "private"
		 },
		 "provider": {
			 "reference": "urn:uuid:6d705d81-8546-43b2-b336-31a282128f2d"
		 },
		 "referral": {
			 "reference": "#referral"
		 },
		 "claim": {
			 "reference": "urn:uuid:a37ffc2e-7d4f-4e91-8bd9-1f22e96418bf"
		 },
		 "outcome": "complete",
		 "careTeam": [
			 {
				 "sequence": 1,
				 "provider": {
					 "reference": "urn:uuid:6d705d81-8546-43b2-b336-31a282128f2d"
				 },
				 "role": {
					 "coding": [
						 {
							 "system": "http://terminology.hl7.org/CodeSystem/claimcareteamrole",
							 "code": "primary",
							 "display": "Primary Care Practitioner"
						 }
					 ]
				 }
			 }
		 ],
		 "diagnosis": [
			 {
				 "sequence": 1,
				 "diagnosisReference": {
					 "reference": "urn:uuid:e5e50c51-acd9-4716-b4dc-4e245ca9f8c2"
				 },
				 "type": [
					 {
						 "coding": [
							 {
								 "system": "http://terminology.hl7.org/CodeSystem/ex-diagnosistype",
								 "code": "principal"
							 }
						 ]
					 }
				 ]
			 }
		 ],
		 "insurance": [
			 {
				 "focal": true,
				 "coverage": {
					 "reference": "#coverage",
					 "display": "private"
				 }
			 }
		 ],
		 "item": [
			 {
				 "sequence": 1,
				 "category": {
					 "coding": [
						 {
							 "system": "https://bluebutton.cms.gov/resources/variables/line_cms_type_srvc_cd",
							 "code": "1",
							 "display": "Medical care"
						 }
					 ]
				 },
				 "productOrService": {
					 "coding": [
						 {
							 "system": "http://snomed.info/sct",
							 "code": "185349003",
							 "display": "Encounter for check up (procedure)"
						 }
					 ],
					 "text": "Encounter for check up (procedure)"
				 },
				 "servicedPeriod": {
					 "start": "1989-08-05T19:37:54-04:00",
					 "end": "1989-08-05T19:52:54-04:00"
				 },
				 "locationCodeableConcept": {
					 "coding": [
						 {
							 "system": "http://terminology.hl7.org/CodeSystem/ex-serviceplace",
							 "code": "19",
							 "display": "Off Campus-Outpatient Hospital"
						 }
					 ]
				 },
				 "encounter": [
					 {
						 "reference": "urn:uuid:abbc5979-3aca-43fe-91a6-8065b7e4a90f"
					 }
				 ]
			 },
			 {
				 "sequence": 2,
				 "diagnosisSequence": [
					 1
				 ],
				 "category": {
					 "coding": [
						 {
							 "system": "https://bluebutton.cms.gov/resources/variables/line_cms_type_srvc_cd",
							 "code": "1",
							 "display": "Medical care"
						 }
					 ]
				 },
				 "productOrService": {
					 "coding": [
						 {
							 "system": "http://snomed.info/sct",
							 "code": "162864005",
							 "display": "Body mass index 30+ - obesity (finding)"
						 }
					 ],
					 "text": "Body mass index 30+ - obesity (finding)"
				 },
				 "servicedPeriod": {
					 "start": "1989-08-05T19:37:54-04:00",
					 "end": "1989-08-05T19:52:54-04:00"
				 },
				 "locationCodeableConcept": {
					 "coding": [
						 {
							 "system": "http://terminology.hl7.org/CodeSystem/ex-serviceplace",
							 "code": "19",
							 "display": "Off Campus-Outpatient Hospital"
						 }
					 ]
				 }
			 }
		 ],
		 "total": [
			 {
				 "category": {
					 "coding": [
						 {
							 "system": "http://terminology.hl7.org/CodeSystem/adjudication",
							 "code": "submitted",
							 "display": "Submitted Amount"
						 }
					 ],
					 "text": "Submitted Amount"
				 },
				 "amount": {
					 "value": 125,
					 "currency": "USD"
				 }
			 }
		 ],
		 "payment": {
			 "amount": {
				 "value": 0,
				 "currency": "USD"
			 }
		 },
		 "meta": {
			 "tag": [
				 {
					 "system": "https://smarthealthit.org/tags",
					 "code": "synthea-5-2019"
				 }
			 ]
		 }
	 },
	 "request": {
		 "method": "POST",
		 "url": "ExplanationOfBenefit"
	 }
 }
 ]
 }`
